var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AgregarComponent.html",[0,0.385,1,0.924]],["body/components/AgregarComponent.html",[0,0.59,1,1.358,2,0.993,3,0.338,4,0.281,5,0.743,6,0.868,7,0.743,8,0.743,9,0.281,10,1.236,11,0.765,12,2.667,13,2.15,14,0.993,15,3.471,16,2.423,17,1.163,18,1.352,19,1.961,20,0.743,21,1.919,22,1.919,23,1.925,24,1.156,25,0.993,26,1.156,27,2.363,28,1.66,29,1.352,30,2.975,31,1.156,32,2.423,33,0.281,34,0.605,35,2.363,36,2.933,37,0.993,38,2.667,39,2.213,40,0.993,41,1.236,42,3.061,43,1.791,44,1.985,45,1.491,46,2.423,47,0.993,48,0.993,49,0.898,50,0.743,51,0.06,52,0.898,53,0.536,54,0.548,55,2.363,56,1.925,57,2.667,58,1.376,59,2.213,60,1.414,61,1.376,62,1.376,63,0.936,64,1.556,65,1.925,66,2.213,67,2.213,68,1.925,69,1.925,70,1.925,71,1.925,72,0.993,73,2.213,74,1.556,75,1.597,76,1.597,77,1.156,78,1.597,79,1.597,80,1.597,81,1.925,82,1.602,83,3.358,84,2.363,85,1.556,86,0.638,87,0.638,88,2.423,89,1.163,90,0.4,91,1.236,92,1.026,93,1.026,94,1.556,95,0.868,96,0.743,97,0.338,98,1.219,99,1.219,100,1.236,101,1.236,102,0.638,103,3.196,104,0.868,105,0.743,106,1.026,107,0.743,108,1.026,109,1.026,110,1.236,111,0.868,112,1.597,113,1.236,114,0.868,115,1.236,116,1.236,117,1.556,118,1.597,119,1.556,120,2.742,121,1.597,122,1.925,123,1.597,124,1.597,125,1.236,126,1.236,127,0.638,128,1.236,129,1.236,130,1.236,131,1.352,132,1.026,133,1.925,134,1.236,135,1.236,136,1.236,137,1.026,138,1.925,139,2.213,140,1.925,141,1.925,142,1.925,143,1.597,144,2.742,145,3.061,146,2.667,147,1.597,148,1.597,149,2.213,150,1.925,151,1.925,152,1.925,153,1.597,154,1.925,155,1.925,156,1.925,157,0.854,158,1.925,159,1.597,160,1.597,161,1.597,162,1.925,163,2.423,164,1.925,165,0.743,166,1.156,167,1.156,168,0.743,169,1.602,170,0.743,171,0.743,172,0.548,173,0.743,174,0.548,175,0.743,176,0.548,177,0.743,178,0.548,179,0.743,180,0.743,181,0.743,182,0.743,183,0.027,184,0.027]],["title/components/AppComponent.html",[0,0.385,172,0.924]],["body/components/AppComponent.html",[0,0.581,1,0.899,2,1.426,3,0.553,4,0.46,5,1.218,6,1.424,7,1.218,8,1.218,9,0.46,20,1.218,21,2.242,22,2.242,23,2.764,24,1.66,25,1.426,26,1.66,28,2.209,29,1.941,31,1.66,33,0.46,34,0.627,40,1.623,45,1.426,49,0.77,51,0.06,52,1.051,53,0.46,77,2.029,86,1.046,87,1.046,89,1.195,90,0.656,96,1.218,97,0.553,102,1.623,137,2.293,165,1.218,166,1.66,167,1.66,168,1.218,169,2.029,170,1.218,171,1.218,172,1.498,173,1.218,174,0.899,175,1.218,176,0.899,177,1.218,178,0.899,179,1.218,180,1.218,181,1.218,182,1.218,183,0.039,184,0.039,185,2.027,186,1.941,187,3.959,188,3.145,189,3.959,190,3.479,191,3.479,192,0.899,193,4.252,194,1.424,195,2.764,196,4.45,197,2.764,198,2.764,199,2.552,200,2.552,201,3.145,202,2.764,203,2.552,204,2.552,205,2.552,206,4.851,207,3.959,208,3.479,209,2.552,210,2.027,211,2.552,212,2.552,213,2.552,214,2.552,215,2.764,216,2.764,217,2.552,218,2.552,219,2.552,220,2.552,221,2.552,222,2.027,223,2.552,224,2.552]],["title/components/EditarComponent.html",[0,0.385,174,0.924]],["body/components/EditarComponent.html",[0,0.595,1,0.561,2,1.01,3,0.345,4,0.287,5,0.759,6,0.888,7,0.759,8,0.759,9,0.287,11,0.776,12,1.958,13,1.895,14,1.01,15,3.61,17,1.026,18,1.375,19,1.988,20,0.759,21,1.935,22,1.935,24,1.176,25,1.01,26,1.176,27,2.397,28,1.683,29,1.375,31,1.176,33,0.287,34,0.613,35,2.397,37,1.01,38,2.699,39,2.239,40,1.01,41,1.264,42,3.089,43,1.802,45,1.393,47,1.01,48,1.01,49,0.911,50,1.754,51,0.06,52,0.911,53,0.444,54,0.561,55,2.397,56,1.958,57,2.699,58,1.01,59,1.624,60,1.444,61,1.01,62,1.01,65,1.958,66,2.239,67,2.239,68,1.958,69,1.958,70,1.958,71,1.958,72,1.01,73,2.239,75,1.624,76,1.624,77,1.176,78,1.624,79,2.422,80,1.624,81,1.958,84,2.397,89,1.174,90,0.409,91,1.264,92,1.048,93,1.048,95,0.888,96,0.759,97,0.345,98,1.237,99,1.237,100,1.264,101,1.264,102,0.652,103,3.222,104,0.888,105,0.759,106,1.048,107,0.759,108,1.048,110,1.264,111,0.888,112,1.624,113,1.264,114,0.888,115,1.264,116,1.264,118,1.624,120,2.762,121,1.048,123,1.048,124,1.048,125,1.264,126,1.264,127,0.652,128,1.958,129,1.264,130,1.264,131,1.375,132,1.048,133,1.958,134,1.264,135,1.264,136,1.264,137,1.048,138,1.958,139,2.239,140,1.958,141,1.958,142,1.958,143,1.624,144,2.897,145,3.089,146,2.699,147,1.624,148,1.624,149,2.239,150,1.958,151,1.958,152,1.958,153,1.624,154,1.958,155,1.958,156,1.958,157,0.868,158,1.958,159,1.624,160,1.624,161,1.624,164,1.958,165,0.759,166,1.176,167,1.176,168,0.759,169,1.621,170,0.759,171,0.759,172,0.561,173,0.759,174,1.37,175,0.759,176,0.561,177,0.759,178,0.561,179,0.759,180,0.759,181,0.759,182,0.759,183,0.028,184,0.028,194,0.888,225,1.264,226,3.398,227,2.699,228,1.958,229,3.017,230,2.465,231,4.191,232,3.888,233,2.465,234,2.465,235,1.591,236,1.958,237,1.958,238,1.591,239,1.295,240,2.465,241,1.591,242,1.591,243,1.591,244,1.591,245,1.591,246,1.591,247,2.465]],["title/components/InicioComponent.html",[0,0.385,176,0.924]],["body/components/InicioComponent.html",[0,0.713,1,1.026,2,1.558,3,0.632,4,0.525,5,1.39,7,1.39,8,1.39,9,0.525,11,0.749,20,1.39,21,2.318,22,2.318,24,1.814,25,1.558,26,1.39,31,1.814,49,0.88,51,0.059,52,1.148,89,0.88,90,0.749,97,0.632,165,1.39,166,1.814,167,1.814,168,1.39,169,2.14,170,1.39,171,1.39,172,1.026,173,1.39,174,1.026,175,1.39,176,1.58,177,1.39,178,1.026,179,1.39,180,1.39,181,1.39,182,1.39,183,0.043,184,0.043,195,3.02,248,2.315,249,3.801,250,3.801,251,2.955,252,3.801,253,3.801,254,3.801,255,3.02,256,3.801,257,3.801,258,3.801,259,3.801,260,3.801,261,3.801,262,3.801,263,3.801,264,3.801,265,3.801,266,3.801,267,3.801,268,3.801,269,3.801,270,3.801]],["title/components/ListaComponent.html",[0,0.385,178,0.924]],["body/components/ListaComponent.html",[0,0.527,1,0.414,2,0.792,3,0.255,4,0.212,5,0.56,6,0.655,7,0.56,8,0.56,9,0.212,11,0.874,13,2.337,14,0.792,17,0.584,18,1.078,19,1.623,20,0.56,21,1.713,22,1.713,24,0.922,25,1.01,26,0.922,28,1.374,29,1.078,31,0.922,33,0.212,34,0.515,37,0.792,39,1.882,40,0.481,43,1.593,45,1.538,47,0.792,48,0.792,49,1.239,50,1.506,51,0.061,52,1.084,53,0.612,54,1.112,58,0.792,59,1.882,60,1.471,61,0.792,62,0.792,63,0.497,66,1.274,67,1.274,72,1.717,73,2.472,75,1.274,76,1.274,77,0.922,78,1.274,79,1.274,80,1.274,82,1.855,86,1.01,87,0.481,89,1.026,90,0.302,93,0.774,95,0.655,96,0.56,97,0.255,98,1.392,99,0.481,102,0.481,105,1.958,106,1.623,107,1.855,108,1.623,118,1.274,120,2.638,121,1.274,122,1.535,123,0.774,124,1.274,127,1.538,131,1.761,132,1.274,139,1.274,143,1.274,144,1.274,147,1.274,148,1.274,149,1.274,153,1.274,159,1.274,160,1.274,161,1.274,162,1.535,165,0.56,166,0.922,167,0.922,168,0.56,169,1.363,170,0.56,171,0.56,172,0.414,173,0.56,174,0.414,175,0.56,176,0.414,177,0.56,178,1.197,179,1.175,180,1.79,181,0.56,182,0.56,183,0.022,184,0.022,192,1.41,194,0.655,197,2.698,198,2.853,201,0.932,202,0.932,210,0.932,215,0.932,216,0.932,228,1.535,239,1.476,251,1.274,271,0.932,272,1.933,273,1.933,274,1.933,275,1.933,276,3.157,277,2.269,278,2.463,279,1.933,280,1.933,281,1.933,282,1.933,283,1.933,284,2.856,285,1.174,286,4.003,287,1.933,288,1.933,289,1.933,290,1.392,291,1.174,292,1.933,293,1.933,294,1.933,295,1.933,296,1.174,297,1.535,298,1.933,299,3.157,300,1.933,301,1.174,302,3.752,303,2.856,304,1.882,305,1.933,306,1.174,307,2.856,308,1.174,309,2.856,310,1.174,311,1.933,312,1.174,313,1.535,314,0.655,315,1.933,316,1.174,317,1.174,318,1.174,319,1.933,320,3.396,321,4.266,322,1.174,323,2.463,324,2.463,325,2.463,326,1.174,327,2.463,328,1.174,329,1.174,330,1.174,331,1.174,332,1.174,333,1.174,334,1.174,335,1.174,336,1.174,337,1.174,338,1.174,339,1.174,340,1.174,341,1.174,342,1.174,343,1.174,344,1.174,345,1.174,346,1.174,347,1.174,348,1.933,349,1.933,350,1.933,351,1.933,352,1.933,353,1.933,354,1.933,355,1.933,356,1.933,357,1.274,358,1.933,359,1.933,360,1.933,361,1.933,362,1.933,363,1.174,364,1.174,365,1.174,366,1.174,367,1.933,368,1.933,369,1.174,370,1.174,371,1.174,372,1.174,373,1.174,374,1.174,375,1.174,376,1.174]],["title/interfaces/Task.html",[60,0.792,377,0.792]],["body/interfaces/Task.html",[3,0.493,4,0.41,9,0.41,11,1.171,33,0.41,34,0.579,51,0.061,53,0.864,54,1.724,60,1.559,63,1.278,97,0.697,102,1.816,104,2.257,105,2.114,107,2.114,109,2.667,111,2.471,114,2.257,157,1.132,183,0.036,184,0.036,192,1.779,239,1.638,290,1.938,304,2.117,357,2.813,377,1.222,378,1.268,379,1.498,380,1.792,381,2.551,382,2.551,383,2.551,384,2.551,385,2.257,386,2.077,387,2.077,388,2.551,389,2.551,390,2.551,391,2.551,392,2.551,393,2.551,394,3.391,395,2.551,396,1.792,397,1.792,398,1.268,399,1.792]],["title/injectables/TaskService.html",[43,1.075,400,1.075]],["body/injectables/TaskService.html",[3,0.443,4,0.368,9,0.368,11,1.053,13,1.658,14,1.218,17,1.163,33,0.368,34,0.536,37,1.578,40,0.837,43,1.578,45,1.751,47,1.218,48,1.218,49,1.058,50,1.837,51,0.061,52,1.163,53,0.738,54,1.357,58,1.578,60,1.56,61,1.218,62,1.218,72,1.852,82,1.418,86,0.837,87,0.837,89,1.163,90,0.525,95,1.139,97,0.443,98,1.578,99,1.437,127,1.578,131,2.148,157,1.047,183,0.034,184,0.034,186,1.139,192,1.047,222,3.059,227,2.361,236,2.361,237,2.361,239,1.69,277,2.361,290,1.751,297,2.361,314,1.139,400,1.218,401,1.345,402,1.621,403,1.959,404,1.959,405,2.538,406,2.31,407,2.972,408,2.972,409,3.851,410,2.972,411,1.621,412,2.815,413,2.972,414,2.697,415,1.959,416,1.959,417,1.959,418,2.972,419,2.041,420,3.279,421,3.059,422,2.972,423,2.041,424,2.538,425,2.972,426,2.041,427,1.959,428,1.959,429,2.972,430,2.041,431,2.972,432,2.972,433,2.972,434,1.959,435,1.345,436,1.139,437,1.345,438,1.345,439,2.041,440,2.041,441,2.041]],["title/interfaces/User.html",[63,0.674,377,0.792]],["body/interfaces/User.html",[3,0.568,4,0.473,9,0.473,11,1.032,33,0.473,34,0.639,51,0.061,53,0.775,54,1.414,60,1.514,63,1.305,97,0.769,102,1.452,104,1.462,105,1.69,107,1.69,109,1.727,111,1.977,114,1.462,157,0.923,183,0.04,184,0.04,192,1.753,239,1.696,290,1.897,304,1.727,357,2.335,377,1.298,378,1.462,379,1.727,380,1.977,381,2.082,382,2.082,383,2.082,384,2.082,385,2.399,386,2.239,387,2.239,388,2.082,389,2.082,390,2.082,391,2.082,392,2.082,393,2.082,394,2.815,395,2.082,396,2.582,397,2.582,398,1.977,399,2.582]],["title/interfaces/User-1.html",[63,0.568,377,0.666,442,2.207]],["body/interfaces/User-1.html",[3,0.571,4,0.474,9,0.474,11,0.677,14,1.078,17,0.794,33,0.474,34,0.64,36,1.734,37,1.078,44,1.695,47,1.078,48,1.078,49,1.073,51,0.061,53,0.776,58,1.456,61,1.078,62,1.078,63,1.317,72,1.078,82,1.255,89,1.214,90,0.677,97,0.771,98,1.078,99,1.078,127,1.078,157,0.927,183,0.04,184,0.04,186,1.468,192,1.669,239,1.633,290,1.649,314,1.468,377,1.214,378,1.468,380,1.982,385,2.244,386,1.982,387,1.982,396,2.585,397,2.585,398,1.982,399,2.585,400,1.456,403,1.734,404,1.734,405,2.341,406,1.734,412,2.65,414,2.65,415,1.734,416,1.734,417,1.734,420,2.65,424,1.734,427,1.734,428,1.734,434,1.734,435,1.734,436,1.468,437,1.734,438,1.734,443,1.734,444,2.09,445,2.09]],["title/injectables/UserService.html",[44,1.251,400,1.075]],["body/injectables/UserService.html",[3,0.543,4,0.452,9,0.452,11,0.884,14,1.408,17,1.037,33,0.452,34,0.619,36,2.264,37,1.729,40,1.027,44,2.013,45,1.607,47,1.408,48,1.408,49,1.184,50,1.195,51,0.061,52,0.756,53,0.619,54,0.882,58,1.729,61,1.408,62,1.408,63,1.296,72,1.408,82,1.639,86,1.027,87,1.027,89,1.184,90,0.644,97,0.745,98,1.027,99,1.607,127,1.027,157,1.21,183,0.039,184,0.039,186,1.397,192,1.487,239,1.21,290,1.027,314,1.397,377,1.037,380,1.397,385,1.397,386,1.397,387,1.397,396,1.917,397,1.917,398,1.397,399,1.917,400,1.408,401,1.651,403,2.264,404,2.264,405,2.781,406,2.584,411,1.99,412,3.01,414,2.914,415,2.264,416,2.264,417,2.264,420,2.914,424,2.264,427,2.264,428,2.264,434,2.264,435,1.651,436,1.397,437,1.651,438,1.651,443,1.651,444,2.729,445,3.352,446,3.435,447,2.505]],["title/coverage.html",[448,2.816]],["body/coverage.html",[0,0.713,1,1.184,9,0.606,10,2.67,17,1.015,43,1.378,44,1.604,51,0.059,53,0.606,60,1.015,63,1.071,112,2.743,172,1.184,174,1.184,176,1.184,178,1.184,183,0.047,184,0.047,185,2.67,225,2.67,248,2.67,271,2.67,377,1.366,379,2.743,400,1.706,402,2.67,443,2.743,448,2.67,449,3.361,450,3.361,451,3.361,452,5.111,453,3.361,454,3.361,455,2.67,456,3.361,457,2.67,458,3.361,459,4.522,460,3.361,461,3.361,462,3.361,463,3.361,464,3.361,465,3.361,466,3.361]],["title/dependencies.html",[467,1.455,468,2.498]],["body/dependencies.html",[51,0.06,90,0.914,92,2.343,96,1.696,183,0.049,184,0.049,194,1.983,313,3.423,436,1.983,468,2.824,469,3.555,470,5.077,471,3.555,472,4.308,473,4.308,474,3.555,475,2.824,476,3.555,477,3.555,478,3.555,479,3.555,480,3.555,481,3.555,482,3.555,483,3.555,484,3.555,485,3.555,486,3.555,487,3.555,488,3.555,489,3.555]],["title/index.html",[33,0.398,490,2.207,491,2.207]],["body/index.html",[0,0.644,4,0.568,17,0.951,18,1.758,51,0.045,52,0.951,77,2.095,183,0.045,184,0.045,251,2.076,255,2.503,421,3.176,467,2.076,475,2.503,492,3.15,493,3.997,494,3.15,495,4.391,496,2.503,497,3.15,498,4.766,499,4.947,500,3.15,501,3.15,502,3.15,503,3.15,504,3.15,505,3.15,506,3.15,507,3.15,508,3.15,509,3.15,510,4.391,511,4.391,512,3.15,513,4.618,514,3.15,515,3.15,516,3.15,517,3.15,518,3.997,519,3.997,520,4.618,521,3.15,522,3.997,523,3.997,524,3.15,525,4.87,526,3.15,527,3.15,528,3.15,529,3.997,530,3.15,531,3.15,532,3.15,533,3.15,534,3.15,535,3.15,536,4.391,537,3.15,538,3.15,539,3.15,540,3.15,541,2.076,542,3.15]],["title/modules.html",[543,2.816]],["body/modules.html",[51,0.053,183,0.053,184,0.053,543,3.27]],["title/overview.html",[541,2.336]],["body/overview.html",[2,1.657,51,0.053,183,0.053,184,0.053,378,2.255,401,2.664,541,2.664,544,4.042,545,4.042,546,4.042]],["title/properties.html",[34,0.567,467,1.455]],["body/properties.html",[34,0.735,51,0.056,183,0.053,184,0.053,496,3.24,547,4.079]],["title/miscellaneous/variables.html",[548,1.753,549,2.498]],["body/miscellaneous/variables.html",[25,1.573,33,0.692,51,0.059,53,0.692,86,1.573,87,1.573,183,0.051,184,0.051,188,3.048,455,3.048,457,3.582,548,3.048,549,3.048,550,3.836,551,3.836,552,3.836,553,3.836,554,3.836,555,3.836,556,3.836]]],"invertedIndex":[["",{"_index":51,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":112,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":547,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0.2.7",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["0.25em",{"_index":364,"title":{},"body":{"components/ListaComponent.html":{}}}],["0.5em",{"_index":363,"title":{},"body":{"components/ListaComponent.html":{}}}],["0.9em",{"_index":366,"title":{},"body":{"components/ListaComponent.html":{}}}],["0/1",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["007bff",{"_index":375,"title":{},"body":{"components/ListaComponent.html":{}}}],["1",{"_index":442,"title":{"interfaces/User-1.html":{}},"body":{}}],["1.16.1",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["1/1",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["10px",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["11.11.1",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["18.0.0",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["18.0.1",{"_index":475,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1rem",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":545,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["28a745",{"_index":367,"title":{},"body":{"components/ListaComponent.html":{}}}],["3",{"_index":546,"title":{},"body":{"overview.html":{}}}],["3.4.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["3085d6",{"_index":336,"title":{},"body":{"components/ListaComponent.html":{}}}],["4/4",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":544,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["5px",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["6/6",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["6c757d",{"_index":373,"title":{},"body":{"components/ListaComponent.html":{}}}],["7.8.0",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":234,"title":{},"body":{"components/EditarComponent.html":{}}}],["acciones",{"_index":350,"title":{},"body":{"components/ListaComponent.html":{}}}],["activatedroute",{"_index":232,"title":{},"body":{"components/EditarComponent.html":{}}}],["active",{"_index":399,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["actual_component",{"_index":182,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["add",{"_index":532,"title":{},"body":{"index.html":{}}}],["added",{"_index":133,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["adding",{"_index":12,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["address",{"_index":398,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["adds",{"_index":65,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["agregar",{"_index":23,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{}}}],["agregar'},{'name",{"_index":171,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["agregar.component.css",{"_index":30,"title":{},"body":{"components/AgregarComponent.html":{}}}],["agregar.component.html",{"_index":32,"title":{},"body":{"components/AgregarComponent.html":{}}}],["agregarcomponent",{"_index":1,"title":{"components/AgregarComponent.html":{}},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{}}}],["agregartarea",{"_index":38,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["alert('an",{"_index":123,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["alert('task",{"_index":134,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["alta",{"_index":156,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["angular",{"_index":77,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":96,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":435,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":90,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":92,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"dependencies.html":{}}}],["angularproyecto",{"_index":492,"title":{},"body":{"index.html":{}}}],["api",{"_index":405,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["app.component.css",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":172,"title":{"components/AppComponent.html":{}},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":255,"title":{},"body":{"components/InicioComponent.html":{},"index.html":{}}}],["application's",{"_index":249,"title":{},"body":{"components/InicioComponent.html":{}}}],["applicationconfig",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":427,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["artifacts",{"_index":514,"title":{},"body":{"index.html":{}}}],["asignado",{"_index":349,"title":{},"body":{"components/ListaComponent.html":{}}}],["asignar",{"_index":162,"title":{},"body":{"components/AgregarComponent.html":{},"components/ListaComponent.html":{}}}],["assign",{"_index":83,"title":{},"body":{"components/AgregarComponent.html":{}}}],["assigned",{"_index":395,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["associated",{"_index":392,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["auto",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["automatically",{"_index":504,"title":{},"body":{"index.html":{}}}],["available",{"_index":88,"title":{},"body":{"components/AgregarComponent.html":{}}}],["background",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ListaComponent.html":{}}}],["badge",{"_index":321,"title":{},"body":{"components/ListaComponent.html":{}}}],["baja",{"_index":154,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["base",{"_index":434,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["based",{"_index":303,"title":{},"body":{"components/ListaComponent.html":{}}}],["baseurl",{"_index":406,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["blue",{"_index":376,"title":{},"body":{"components/ListaComponent.html":{}}}],["bold",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["boolean",{"_index":385,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ListaComponent.html":{}}}],["bound",{"_index":80,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["brand",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["brenes",{"_index":268,"title":{},"body":{"components/InicioComponent.html":{}}}],["brief",{"_index":381,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["browser",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":513,"title":{},"body":{"index.html":{}}}],["called",{"_index":67,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["cancelbuttoncolor",{"_index":337,"title":{},"body":{"components/ListaComponent.html":{}}}],["capabilities",{"_index":534,"title":{},"body":{"index.html":{}}}],["case",{"_index":320,"title":{},"body":{"components/ListaComponent.html":{}}}],["change",{"_index":506,"title":{},"body":{"index.html":{}}}],["check",{"_index":539,"title":{},"body":{"index.html":{}}}],["choice",{"_index":528,"title":{},"body":{"index.html":{}}}],["class",{"_index":49,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":495,"title":{},"body":{"index.html":{}}}],["code",{"_index":508,"title":{},"body":{"index.html":{}}}],["color",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ListaComponent.html":{}}}],["command",{"_index":529,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":28,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["completada",{"_index":152,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["complete",{"_index":384,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["completed",{"_index":323,"title":{},"body":{"components/ListaComponent.html":{}}}],["completion",{"_index":390,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["component",{"_index":0,"title":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":170,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"overview.html":{}}}],["confirmation",{"_index":347,"title":{},"body":{"components/ListaComponent.html":{}}}],["confirmbuttoncolor",{"_index":335,"title":{},"body":{"components/ListaComponent.html":{}}}],["confirmbuttontext",{"_index":339,"title":{},"body":{"components/ListaComponent.html":{}}}],["confirming",{"_index":298,"title":{},"body":{"components/ListaComponent.html":{}}}],["console.error('error",{"_index":121,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["console.error('there",{"_index":246,"title":{},"body":{"components/EditarComponent.html":{}}}],["console.log('task",{"_index":132,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["console.log('tasks",{"_index":317,"title":{},"body":{"components/ListaComponent.html":{}}}],["console.log(`attempting",{"_index":343,"title":{},"body":{"components/ListaComponent.html":{}}}],["const",{"_index":128,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["construct",{"_index":56,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(fb",{"_index":41,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["constructor(http",{"_index":411,"title":{},"body":{"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":314,"title":{},"body":{"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["constructor(taskservice",{"_index":285,"title":{},"body":{"components/ListaComponent.html":{}}}],["cover",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":448,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creating",{"_index":16,"title":{},"body":{"components/AgregarComponent.html":{}}}],["css",{"_index":302,"title":{},"body":{"components/ListaComponent.html":{}}}],["current",{"_index":393,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["d33",{"_index":338,"title":{},"body":{"components/ListaComponent.html":{}}}],["data",{"_index":79,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["date",{"_index":357,"title":{},"body":{"components/ListaComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["dc3545",{"_index":371,"title":{},"body":{"components/ListaComponent.html":{}}}],["de",{"_index":144,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["default",{"_index":86,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["del",{"_index":263,"title":{},"body":{"components/InicioComponent.html":{}}}],["delete",{"_index":277,"title":{},"body":{"components/ListaComponent.html":{},"injectables/TaskService.html":{}}}],["deleted",{"_index":299,"title":{},"body":{"components/ListaComponent.html":{}}}],["deletes",{"_index":297,"title":{},"body":{"components/ListaComponent.html":{},"injectables/TaskService.html":{}}}],["deletetask",{"_index":407,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetask(id",{"_index":418,"title":{},"body":{"injectables/TaskService.html":{}}}],["deleting",{"_index":348,"title":{},"body":{"components/ListaComponent.html":{}}}],["dependencies",{"_index":468,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descripción",{"_index":143,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["dev",{"_index":501,"title":{},"body":{"index.html":{}}}],["development",{"_index":497,"title":{},"body":{"index.html":{}}}],["directive",{"_index":168,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["directives",{"_index":181,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":512,"title":{},"body":{"index.html":{}}}],["directory",{"_index":517,"title":{},"body":{"index.html":{}}}],["displayed",{"_index":311,"title":{},"body":{"components/ListaComponent.html":{}}}],["displaying",{"_index":272,"title":{},"body":{"components/ListaComponent.html":{}}}],["dist",{"_index":516,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["due",{"_index":382,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["duedate",{"_index":104,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["dynamic",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":526,"title":{},"body":{"index.html":{}}}],["e9ecef",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["edit",{"_index":276,"title":{},"body":{"components/ListaComponent.html":{}}}],["editar",{"_index":228,"title":{},"body":{"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["editar'},{'name",{"_index":175,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["editar.component.css",{"_index":229,"title":{},"body":{"components/EditarComponent.html":{}}}],["editar.component.html",{"_index":230,"title":{},"body":{"components/EditarComponent.html":{}}}],["editarcomponent",{"_index":174,"title":{"components/EditarComponent.html":{}},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{}}}],["editartarea",{"_index":280,"title":{},"body":{"components/ListaComponent.html":{}}}],["editartarea(id",{"_index":289,"title":{},"body":{"components/ListaComponent.html":{}}}],["edited",{"_index":294,"title":{},"body":{"components/ListaComponent.html":{}}}],["editing",{"_index":226,"title":{},"body":{"components/EditarComponent.html":{}}}],["el",{"_index":140,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["element",{"_index":167,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["eliminar",{"_index":362,"title":{},"body":{"components/ListaComponent.html":{}}}],["eliminartarea",{"_index":281,"title":{},"body":{"components/ListaComponent.html":{}}}],["eliminartarea(id",{"_index":295,"title":{},"body":{"components/ListaComponent.html":{}}}],["email",{"_index":397,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["en",{"_index":151,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["end",{"_index":525,"title":{},"body":{"index.html":{}}}],["entry",{"_index":253,"title":{},"body":{"components/InicioComponent.html":{}}}],["enviar",{"_index":164,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["error",{"_index":120,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["es",{"_index":141,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["estimated",{"_index":383,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["eventcoalescing",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":522,"title":{},"body":{"index.html":{}}}],["existing",{"_index":227,"title":{},"body":{"components/EditarComponent.html":{},"injectables/TaskService.html":{}}}],["export",{"_index":97,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["f8f9fa",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":115,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["fb",{"_index":55,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["fecha",{"_index":147,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["fetches",{"_index":309,"title":{},"body":{"components/ListaComponent.html":{}}}],["fetching",{"_index":122,"title":{},"body":{"components/AgregarComponent.html":{},"components/ListaComponent.html":{}}}],["ffc107",{"_index":369,"title":{},"body":{"components/ListaComponent.html":{}}}],["fff",{"_index":365,"title":{},"body":{"components/ListaComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":507,"title":{},"body":{"index.html":{}}}],["first",{"_index":531,"title":{},"body":{"index.html":{}}}],["fit",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ListaComponent.html":{}}}],["form",{"_index":15,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["formbuilder",{"_index":42,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["formgroup",{"_index":84,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["formulario",{"_index":138,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["foto",{"_index":158,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["functionality",{"_index":274,"title":{},"body":{"components/ListaComponent.html":{}}}],["further",{"_index":535,"title":{},"body":{"index.html":{}}}],["generate",{"_index":510,"title":{},"body":{"index.html":{}}}],["generated",{"_index":494,"title":{},"body":{"index.html":{}}}],["getpriorityclass",{"_index":282,"title":{},"body":{"components/ListaComponent.html":{}}}],["getpriorityclass(priority",{"_index":300,"title":{},"body":{"components/ListaComponent.html":{}}}],["gets",{"_index":424,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["gettaskbyid",{"_index":408,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettaskbyid(id",{"_index":422,"title":{},"body":{"injectables/TaskService.html":{}}}],["gettaskprogressclass",{"_index":283,"title":{},"body":{"components/ListaComponent.html":{}}}],["gettaskprogressclass(progress",{"_index":305,"title":{},"body":{"components/ListaComponent.html":{}}}],["gettasks",{"_index":409,"title":{},"body":{"injectables/TaskService.html":{}}}],["getting",{"_index":490,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":445,"title":{},"body":{"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["go",{"_index":538,"title":{},"body":{"index.html":{}}}],["gray",{"_index":374,"title":{},"body":{"components/ListaComponent.html":{}}}],["green",{"_index":368,"title":{},"body":{"components/ListaComponent.html":{}}}],["grupo",{"_index":264,"title":{},"body":{"components/InicioComponent.html":{}}}],["handle",{"_index":59,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["handling",{"_index":403,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["help",{"_index":536,"title":{},"body":{"index.html":{}}}],["high",{"_index":325,"title":{},"body":{"components/ListaComponent.html":{}}}],["home",{"_index":250,"title":{},"body":{"components/InicioComponent.html":{}}}],["hook",{"_index":76,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["horas",{"_index":159,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["hours",{"_index":111,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["html",{"_index":166,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["http",{"_index":414,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":503,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api/tasks",{"_index":433,"title":{},"body":{"injectables/TaskService.html":{}}}],["http://localhost:8000/api/users",{"_index":444,"title":{},"body":{"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["httpclient",{"_index":412,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["icon",{"_index":332,"title":{},"body":{"components/ListaComponent.html":{}}}],["id",{"_index":239,"title":{},"body":{"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":18,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"index.html":{}}}],["import",{"_index":89,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":26,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["in_progress",{"_index":322,"title":{},"body":{"components/ListaComponent.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":386,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["inicio",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/InicioComponent.html":{}}}],["inicio'},{'name",{"_index":177,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["inicio.component.css",{"_index":261,"title":{},"body":{"components/InicioComponent.html":{}}}],["inicio.component.html",{"_index":259,"title":{},"body":{"components/InicioComponent.html":{}}}],["iniciocomponent",{"_index":176,"title":{"components/InicioComponent.html":{}},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{}}}],["initialized",{"_index":78,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["initializes",{"_index":47,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":400,"title":{"injectables/TaskService.html":{},"injectables/UserService.html":{}},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":401,"title":{},"body":{"injectables/TaskService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["instance",{"_index":48,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["integrantes",{"_index":262,"title":{},"body":{"components/InicioComponent.html":{}}}],["interact",{"_index":404,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["interface",{"_index":377,"title":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":378,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"overview.html":{}}}],["isready",{"_index":114,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["item",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["jeancarlos",{"_index":269,"title":{},"body":{"components/InicioComponent.html":{}}}],["jquery",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":524,"title":{},"body":{"index.html":{}}}],["kevin",{"_index":265,"title":{},"body":{"components/InicioComponent.html":{}}}],["keylor",{"_index":267,"title":{},"body":{"components/InicioComponent.html":{}}}],["la",{"_index":145,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["landing",{"_index":258,"title":{},"body":{"components/InicioComponent.html":{}}}],["lara",{"_index":266,"title":{},"body":{"components/InicioComponent.html":{}}}],["legend",{"_index":165,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["level",{"_index":304,"title":{},"body":{"components/ListaComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["lifecycle",{"_index":75,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["link",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["link:hover",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":82,"title":{},"body":{"components/AgregarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["lista",{"_index":179,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["listacomponent",{"_index":178,"title":{"components/ListaComponent.html":{}},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{}}}],["listar",{"_index":137,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{}}}],["listar.component.css",{"_index":278,"title":{},"body":{"components/ListaComponent.html":{}}}],["listar.component.html",{"_index":279,"title":{},"body":{"components/ListaComponent.html":{}}}],["listo",{"_index":160,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["low",{"_index":324,"title":{},"body":{"components/ListaComponent.html":{}}}],["main",{"_index":257,"title":{},"body":{"components/InicioComponent.html":{}}}],["make",{"_index":416,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["managing",{"_index":273,"title":{},"body":{"components/ListaComponent.html":{}}}],["matching",{"_index":184,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":155,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["medium",{"_index":108,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["method",{"_index":66,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["methods",{"_index":37,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":548,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/task.model",{"_index":95,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{}}}],["modules",{"_index":543,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":537,"title":{},"body":{"index.html":{}}}],["ms",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":52,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["nav",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["navbar",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":502,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":292,"title":{},"body":{"components/ListaComponent.html":{}}}],["navigation",{"_index":288,"title":{},"body":{"components/ListaComponent.html":{}}}],["need",{"_index":530,"title":{},"body":{"index.html":{}}}],["new",{"_index":17,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":118,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["ng",{"_index":499,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":39,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["ngx",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":394,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["number",{"_index":290,"title":{},"body":{"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["object",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{}}}],["objects",{"_index":428,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":420,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["obtenertareas",{"_index":284,"title":{},"body":{"components/ListaComponent.html":{}}}],["occurred",{"_index":124,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["one",{"_index":237,"title":{},"body":{"components/EditarComponent.html":{},"injectables/TaskService.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["operations",{"_index":62,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["optional",{"_index":54,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":540,"title":{},"body":{"index.html":{}}}],["overview",{"_index":541,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":467,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ListaComponent.html":{}}}],["page",{"_index":251,"title":{},"body":{"components/InicioComponent.html":{},"components/ListaComponent.html":{},"index.html":{}}}],["param",{"_index":98,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":50,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["params['id",{"_index":243,"title":{},"body":{"components/EditarComponent.html":{}}}],["patches",{"_index":240,"title":{},"body":{"components/EditarComponent.html":{}}}],["pendiente",{"_index":150,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["pending",{"_index":106,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["photo",{"_index":391,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["photo_url",{"_index":241,"title":{},"body":{"components/EditarComponent.html":{}}}],["photourl",{"_index":109,"title":{},"body":{"components/AgregarComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["platform",{"_index":527,"title":{},"body":{"index.html":{}}}],["point",{"_index":254,"title":{},"body":{"components/InicioComponent.html":{}}}],["popper.js",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["prioridad",{"_index":153,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["priority",{"_index":107,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["private",{"_index":99,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["progreso",{"_index":149,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["progress",{"_index":105,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["project",{"_index":493,"title":{},"body":{"index.html":{}}}],["properties",{"_index":34,"title":{"properties.html":{}},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providedin",{"_index":437,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["providehttpclient",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":14,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["providezonechangedetection",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":256,"title":{},"body":{"components/InicioComponent.html":{}}}],["proyecto",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/ListaComponent.html":{}}}],["reactive",{"_index":57,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["reactiveformsmodule",{"_index":27,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["ready",{"_index":388,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["red",{"_index":372,"title":{},"body":{"components/ListaComponent.html":{}}}],["reference",{"_index":542,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":346,"title":{},"body":{"components/ListaComponent.html":{}}}],["related",{"_index":61,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["reload",{"_index":505,"title":{},"body":{"index.html":{}}}],["representing",{"_index":380,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["requerido",{"_index":142,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["requests",{"_index":417,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["response",{"_index":131,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{}}}],["result.isconfirmed",{"_index":342,"title":{},"body":{"components/ListaComponent.html":{}}}],["results",{"_index":183,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":425,"title":{},"body":{"injectables/TaskService.html":{}}}],["retrieves",{"_index":81,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["return",{"_index":127,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":72,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["revert",{"_index":331,"title":{},"body":{"components/ListaComponent.html":{}}}],["review",{"_index":389,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{}}}],["root",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":173,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["route",{"_index":231,"title":{},"body":{"components/EditarComponent.html":{}}}],["router",{"_index":286,"title":{},"body":{"components/ListaComponent.html":{}}}],["routerlink",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["routeroutlet",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":498,"title":{},"body":{"index.html":{}}}],["running",{"_index":518,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":436,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["s",{"_index":161,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["save",{"_index":432,"title":{},"body":{"injectables/TaskService.html":{}}}],["saved",{"_index":70,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["saves",{"_index":431,"title":{},"body":{"injectables/TaskService.html":{}}}],["savetask",{"_index":410,"title":{},"body":{"injectables/TaskService.html":{}}}],["savetask(task",{"_index":429,"title":{},"body":{"injectables/TaskService.html":{}}}],["scaffolding",{"_index":509,"title":{},"body":{"index.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["serve",{"_index":500,"title":{},"body":{"index.html":{}}}],["server",{"_index":421,"title":{},"body":{"injectables/TaskService.html":{},"index.html":{}}}],["serves",{"_index":252,"title":{},"body":{"components/InicioComponent.html":{}}}],["service",{"_index":58,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["services/task.service",{"_index":93,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["services/user.service",{"_index":94,"title":{},"body":{"components/AgregarComponent.html":{}}}],["showcancelbutton",{"_index":334,"title":{},"body":{"components/ListaComponent.html":{}}}],["sin",{"_index":355,"title":{},"body":{"components/ListaComponent.html":{}}}],["size",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ListaComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"index.html":{}}}],["specific",{"_index":293,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/.../app.config.ts",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/agregar/agregar.component.ts",{"_index":10,"title":{},"body":{"components/AgregarComponent.html":{},"coverage.html":{}}}],["src/app/agregar/agregar.component.ts:24",{"_index":85,"title":{},"body":{"components/AgregarComponent.html":{}}}],["src/app/agregar/agregar.component.ts:29",{"_index":46,"title":{},"body":{"components/AgregarComponent.html":{}}}],["src/app/agregar/agregar.component.ts:61",{"_index":74,"title":{},"body":{"components/AgregarComponent.html":{}}}],["src/app/agregar/agregar.component.ts:78",{"_index":64,"title":{},"body":{"components/AgregarComponent.html":{}}}],["src/app/app.component.ts",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/editar/editar.component.ts",{"_index":225,"title":{},"body":{"components/EditarComponent.html":{},"coverage.html":{}}}],["src/app/editar/editar.component.ts:24",{"_index":233,"title":{},"body":{"components/EditarComponent.html":{}}}],["src/app/editar/editar.component.ts:56",{"_index":238,"title":{},"body":{"components/EditarComponent.html":{}}}],["src/app/editar/editar.component.ts:75",{"_index":235,"title":{},"body":{"components/EditarComponent.html":{}}}],["src/app/inicio/inicio.component.ts",{"_index":248,"title":{},"body":{"components/InicioComponent.html":{},"coverage.html":{}}}],["src/app/listar/listar.component.ts",{"_index":271,"title":{},"body":{"components/ListaComponent.html":{},"coverage.html":{}}}],["src/app/listar/listar.component.ts:102",{"_index":291,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/listar/listar.component.ts:112",{"_index":296,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/listar/listar.component.ts:24",{"_index":287,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/listar/listar.component.ts:39",{"_index":308,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/listar/listar.component.ts:46",{"_index":310,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/listar/listar.component.ts:65",{"_index":306,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/listar/listar.component.ts:84",{"_index":301,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/models/task.model.ts",{"_index":379,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts",{"_index":402,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/services/task.service.ts:18",{"_index":413,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:32",{"_index":426,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:42",{"_index":423,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:52",{"_index":430,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/task.service.ts:62",{"_index":419,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/services/user.service.ts",{"_index":443,"title":{},"body":{"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:42",{"_index":446,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:56",{"_index":447,"title":{},"body":{"injectables/UserService.html":{}}}],["standalone",{"_index":24,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["started",{"_index":491,"title":{"index.html":{}},"body":{}}],["statements",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":307,"title":{},"body":{"components/ListaComponent.html":{}}}],["stored",{"_index":515,"title":{},"body":{"index.html":{}}}],["string",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["styleurl",{"_index":260,"title":{},"body":{"components/InicioComponent.html":{}}}],["styleurls",{"_index":29,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["submitted",{"_index":68,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["success",{"_index":345,"title":{},"body":{"components/ListaComponent.html":{}}}],["successfully",{"_index":135,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["sure",{"_index":328,"title":{},"body":{"components/ListaComponent.html":{}}}],["swal",{"_index":312,"title":{},"body":{"components/ListaComponent.html":{}}}],["swal.fire",{"_index":327,"title":{},"body":{"components/ListaComponent.html":{}}}],["sweetalert2",{"_index":313,"title":{},"body":{"components/ListaComponent.html":{},"dependencies.html":{}}}],["switch",{"_index":319,"title":{},"body":{"components/ListaComponent.html":{}}}],["table",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["tarea",{"_index":146,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["tarea.description",{"_index":352,"title":{},"body":{"components/ListaComponent.html":{}}}],["tarea.duedate",{"_index":356,"title":{},"body":{"components/ListaComponent.html":{}}}],["tarea.hours",{"_index":360,"title":{},"body":{"components/ListaComponent.html":{}}}],["tarea.isready",{"_index":361,"title":{},"body":{"components/ListaComponent.html":{}}}],["tarea.priority",{"_index":359,"title":{},"body":{"components/ListaComponent.html":{}}}],["tarea.progress",{"_index":358,"title":{},"body":{"components/ListaComponent.html":{}}}],["tarea.title",{"_index":351,"title":{},"body":{"components/ListaComponent.html":{}}}],["tarea.user",{"_index":353,"title":{},"body":{"components/ListaComponent.html":{}}}],["tarea.user.username",{"_index":354,"title":{},"body":{"components/ListaComponent.html":{}}}],["tareas",{"_index":180,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["task",{"_index":60,"title":{"interfaces/Task.html":{}},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["taskform",{"_index":35,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["tasks",{"_index":13,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{}}}],["taskservice",{"_index":43,"title":{"injectables/TaskService.html":{}},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["test",{"_index":521,"title":{},"body":{"index.html":{}}}],["testing",{"_index":533,"title":{},"body":{"index.html":{}}}],["tests",{"_index":520,"title":{},"body":{"index.html":{}}}],["text",{"_index":329,"title":{},"body":{"components/ListaComponent.html":{}}}],["then((result",{"_index":341,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.fb.group",{"_index":101,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["this.http.delete(`${this.baseurl}/delete/${id",{"_index":441,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get(`${this.baseurl}/gettaskbyid/${id",{"_index":439,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.http.get(`${this.baseurl}/list",{"_index":438,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["this.http.post(`${this.baseurl}/save",{"_index":440,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.obtenertareas",{"_index":315,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":242,"title":{},"body":{"components/EditarComponent.html":{}}}],["this.router.navigate(['/editar",{"_index":326,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.tareas",{"_index":318,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.taskform",{"_index":100,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["this.taskform.invalid",{"_index":125,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["this.taskform.markallastouched",{"_index":126,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["this.taskform.patchvalue(data",{"_index":245,"title":{},"body":{"components/EditarComponent.html":{}}}],["this.taskform.value",{"_index":129,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["this.taskservice.deletetask(id).subscribe",{"_index":344,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.taskservice.gettaskbyid(id).subscribe",{"_index":244,"title":{},"body":{"components/EditarComponent.html":{}}}],["this.taskservice.gettasks().subscribe",{"_index":316,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.taskservice.savetask(task).subscribe",{"_index":130,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["this.users",{"_index":119,"title":{},"body":{"components/AgregarComponent.html":{}}}],["this.userservice.getusers().subscribe",{"_index":117,"title":{},"body":{"components/AgregarComponent.html":{}}}],["title",{"_index":102,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":53,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["título",{"_index":139,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["unit",{"_index":519,"title":{},"body":{"index.html":{}}}],["updates",{"_index":236,"title":{},"body":{"components/EditarComponent.html":{},"injectables/TaskService.html":{}}}],["url",{"_index":157,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["use",{"_index":511,"title":{},"body":{"index.html":{}}}],["used",{"_index":415,"title":{},"body":{"injectables/TaskService.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["user",{"_index":63,"title":{"interfaces/User.html":{},"interfaces/User-1.html":{}},"body":{"components/AgregarComponent.html":{},"components/ListaComponent.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.username",{"_index":163,"title":{},"body":{"components/AgregarComponent.html":{}}}],["userid",{"_index":116,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["username",{"_index":396,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["users",{"_index":36,"title":{},"body":{"components/AgregarComponent.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":44,"title":{"injectables/UserService.html":{}},"body":{"components/AgregarComponent.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":71,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["usuario",{"_index":247,"title":{},"body":{"components/EditarComponent.html":{}}}],["valid",{"_index":69,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["validators",{"_index":91,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["validators.min(0",{"_index":113,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["validators.pattern('https",{"_index":110,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["validators.required",{"_index":103,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["value",{"_index":87,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/ListaComponent.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":169,"title":{},"body":{"components/AgregarComponent.html":{},"components/AppComponent.html":{},"components/EditarComponent.html":{},"components/InicioComponent.html":{},"components/ListaComponent.html":{}}}],["vargas",{"_index":270,"title":{},"body":{"components/InicioComponent.html":{}}}],["variable",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":549,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vencimiento",{"_index":148,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["version",{"_index":496,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":523,"title":{},"body":{"index.html":{}}}],["view",{"_index":275,"title":{},"body":{"components/ListaComponent.html":{}}}],["void",{"_index":73,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{},"components/ListaComponent.html":{}}}],["warning",{"_index":333,"title":{},"body":{"components/ListaComponent.html":{}}}],["weight",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["whether",{"_index":387,"title":{},"body":{"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/User-1.html":{},"injectables/UserService.html":{}}}],["window.location.href",{"_index":136,"title":{},"body":{"components/AgregarComponent.html":{},"components/EditarComponent.html":{}}}],["won't",{"_index":330,"title":{},"body":{"components/ListaComponent.html":{}}}],["yellow",{"_index":370,"title":{},"body":{"components/ListaComponent.html":{}}}],["yes",{"_index":340,"title":{},"body":{"components/ListaComponent.html":{}}}],["zone.js",{"_index":488,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AgregarComponent.html":{"url":"components/AgregarComponent.html","title":"component - AgregarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AgregarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/agregar/agregar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding tasks.\nThis component provides a form for creating new tasks.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-agregar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./agregar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./agregar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                taskForm\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agregarTarea\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, taskService: TaskService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/agregar/agregar.component.ts:29\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the AgregarComponent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder to construct the reactive form.\n\n\n                                                        \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle task-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle user-related operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agregarTarea\n                        \n                    \n                \n            \n            \n                \nagregarTarea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agregar/agregar.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Adds a new task.\nThis method is called when the form is submitted. If the form is valid, the task is saved using the TaskService.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agregar/agregar.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after Angular has initialized all data-bound properties.\nThis method retrieves the list of users to assign tasks to.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/agregar/agregar.component.ts:24\n                        \n                    \n\n            \n                \n                    Reactive form for the task.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/agregar/agregar.component.ts:29\n                        \n                    \n\n            \n                \n                    List of available users to assign to the task.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TaskService } from '../services/task.service';\nimport { UserService, User } from '../services/user.service';\nimport { Task } from '../models/task.model';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Component for adding tasks.\n *\n * This component provides a form for creating new tasks.\n */\n@Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.component.html',\n  styleUrls: ['./agregar.component.css'],\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule]\n})\nexport class AgregarComponent implements OnInit {\n  /**\n   * Reactive form for the task.\n   */\n  taskForm: FormGroup;\n\n  /**\n   * List of available users to assign to the task.\n   */\n  users: User[] = [];\n\n  /**\n   * Initializes a new instance of the AgregarComponent class.\n   *\n   * @param fb - FormBuilder to construct the reactive form.\n   * @param taskService - Service to handle task-related operations.\n   * @param userService - Service to handle user-related operations.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private taskService: TaskService,\n    private userService: UserService\n  ) {\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: [''],\n      dueDate: ['', Validators.required],\n      progress: ['PENDING', Validators.required],\n      priority: ['MEDIUM', Validators.required],\n      photoUrl: ['', Validators.pattern('https?://.+')],\n      hours: [0, [Validators.required, Validators.min(0)]],\n      isReady: [false, Validators.required],\n      userId: [0, Validators.required]\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called after Angular has initialized all data-bound properties.\n   *\n   * This method retrieves the list of users to assign tasks to.\n   */\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe({\n      next: users => {\n        this.users = users;\n      },\n      error: error => {\n        console.error('Error fetching users:', error);\n        alert('An error occurred while fetching users.');\n      }\n    });\n  }\n\n  /**\n   * Adds a new task.\n   *\n   * This method is called when the form is submitted. If the form is valid, the task is saved using the TaskService.\n   */\n  agregarTarea(): void {\n    if (this.taskForm.invalid) {\n      this.taskForm.markAllAsTouched();\n      return;\n    }\n\n    const task: Task = this.taskForm.value;\n    this.taskService.saveTask(task).subscribe({\n      next: response => {\n        console.log('Task added:', response);\n        alert('Task added successfully');\n        window.location.href = '/listar';\n      },\n      error: error => {\n        console.error('Error adding task:', error);\n        alert('An error occurred while adding the task.');\n      }\n    });\n  }\n}\n\n    \n\n    \n        Formulario\n\n\n  \n    Título:\n    \n    \n      El título es requerido.\n    \n  \n\n  \n    Descripción de la Tarea:\n    \n  \n\n  \n    Fecha de Vencimiento:\n    \n  \n\n  \n    Progreso de la Tarea:\n    \n      Pendiente\n      En Progreso\n      Completada\n    \n  \n\n  \n    Prioridad:\n    \n      Baja\n      Media\n      Alta\n    \n  \n\n  \n    URL de la Foto:\n    \n  \n\n  \n    Horas:\n    \n  \n\n  \n    ¿Listo?:\n    \n      No\n      Sí\n    \n  \n\n  \n    Asignar a:\n    \n      {{ user.userName }}\n    \n  \n\n  Enviar\n\n\n    \n\n    \n                \n                    ./agregar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Formulario      Título:              El título es requerido.            Descripción de la Tarea:            Fecha de Vencimiento:            Progreso de la Tarea:          Pendiente      En Progreso      Completada            Prioridad:          Baja      Media      Alta            URL de la Foto:            Horas:            ¿Listo?:          No      Sí            Asignar a:          {{ user.userName }}        Enviar'\n    var COMPONENTS = [{'name': 'AgregarComponent', 'selector': 'app-agregar'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditarComponent', 'selector': 'app-editar'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'ListaComponent', 'selector': 'app-lista-tareas'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AgregarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            CommonModule\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Angular-Proyecto'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, CommonModule, RouterLink],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular-Proyecto';\n  constructor() {}\n}\n\n    \n\n    \n        \n  Angular Proyecto\n  \n    \n  \n  \n    \n      \n        Inicio\n      \n      \n        Agregar\n      \n      \n        Listar\n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .navbar {\n  background-color: #f8f9fa;\n}\n\n.navbar-brand {\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n\n.navbar-nav .nav-item .nav-link {\n  font-size: 1rem;\n  padding: 10px 15px;\n}\n\n.navbar-nav .nav-item .nav-link:hover {\n  background-color: #e9ecef;\n  border-radius: 5px;\n}\n\n.navbar-nav .ms-auto .nav-item .nav-link img {\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Angular Proyecto                            Inicio                    Agregar                    Listar                                                            '\n    var COMPONENTS = [{'name': 'AgregarComponent', 'selector': 'app-agregar'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditarComponent', 'selector': 'app-editar'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'ListaComponent', 'selector': 'app-lista-tareas'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditarComponent.html":{"url":"components/EditarComponent.html","title":"component - EditarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editar/editar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for editing tasks.\nThis component provides a form for editing existing tasks.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./editar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                taskForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agregarTarea\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, taskService: TaskService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/editar/editar.component.ts:24\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the EditarComponent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder to construct the reactive form.\n\n\n                                                        \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle task-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nActivatedRoute to access route parameters.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        agregarTarea\n                        \n                    \n                \n            \n            \n                \nagregarTarea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/editar/editar.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Adds a new task or updates an existing one.\nThis method is called when the form is submitted. If the form is valid, the task is saved using the TaskService.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/editar/editar.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after Angular has initialized all data-bound properties.\nThis method retrieves the task by ID from the route parameters and patches the form with the task data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        taskForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/editar/editar.component.ts:24\n                        \n                    \n\n            \n                \n                    Reactive form for the task.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TaskService } from '../services/task.service';\nimport { Task } from '../models/task.model';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Component for editing tasks.\n *\n * This component provides a form for editing existing tasks.\n */\n@Component({\n  selector: 'app-editar',\n  templateUrl: './editar.component.html',\n  styleUrls: ['./editar.component.css'],\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule]\n})\nexport class EditarComponent implements OnInit {\n  /**\n   * Reactive form for the task.\n   */\n  taskForm: FormGroup;\n\n  /**\n   * Initializes a new instance of the EditarComponent class.\n   *\n   * @param fb - FormBuilder to construct the reactive form.\n   * @param taskService - Service to handle task-related operations.\n   * @param route - ActivatedRoute to access route parameters.\n   */\n  constructor(\n    private fb: FormBuilder,\n    private taskService: TaskService,\n    private route: ActivatedRoute\n  ) {\n    this.taskForm = this.fb.group({\n      title: ['', Validators.required],\n      description: [''],\n      dueDate: ['', Validators.required],\n      progress: ['PENDING', Validators.required],\n      priority: ['MEDIUM', Validators.required],\n      photo_url: ['', Validators.pattern('https?://.+')],\n      hours: [0, [Validators.required, Validators.min(0)]],\n      isReady: [false, Validators.required],\n      userId: [0, Validators.required]\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called after Angular has initialized all data-bound properties.\n   *\n   * This method retrieves the task by ID from the route parameters and patches the form with the task data.\n   */\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      this.taskService.getTaskById(id).subscribe({\n        next: data => {\n          this.taskForm.patchValue(data);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n      });\n    });\n  }\n\n  /**\n   * Adds a new task or updates an existing one.\n   *\n   * This method is called when the form is submitted. If the form is valid, the task is saved using the TaskService.\n   */\n  agregarTarea(): void {\n    if (this.taskForm.invalid) {\n      this.taskForm.markAllAsTouched();\n      return;\n    }\n\n    const task: Task = this.taskForm.value;\n    this.taskService.saveTask(task).subscribe({\n      next: response => {\n        console.log('Task added:', response);\n        alert('Task added successfully');\n        window.location.href = '/listar';\n      },\n      error: error => {\n        console.error('Error adding task:', error);\n        alert('An error occurred while adding the task.');\n      }\n    });\n  }\n}\n\n    \n\n    \n        Formulario\n\n\n  \n    Título:\n    \n    \n      El título es requerido.\n    \n  \n\n  \n    Descripción de la Tarea:\n    \n  \n\n  \n    Fecha de Vencimiento:\n    \n  \n\n  \n    Progreso de la Tarea:\n    \n      Pendiente\n      En Progreso\n      Completada\n    \n  \n\n  \n    Prioridad:\n    \n      Baja\n      Media\n      Alta\n    \n  \n\n  \n    URL de la Foto:\n    \n  \n\n  \n    Horas:\n    \n  \n\n  \n    ¿Listo?:\n    \n      No\n      Sí\n    \n  \n\n  \n    ID de Usuario:\n    \n  \n\n  Enviar\n\n\n    \n\n    \n                \n                    ./editar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Formulario      Título:              El título es requerido.            Descripción de la Tarea:            Fecha de Vencimiento:            Progreso de la Tarea:          Pendiente      En Progreso      Completada            Prioridad:          Baja      Media      Alta            URL de la Foto:            Horas:            ¿Listo?:          No      Sí            ID de Usuario:        Enviar'\n    var COMPONENTS = [{'name': 'AgregarComponent', 'selector': 'app-agregar'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditarComponent', 'selector': 'app-editar'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'ListaComponent', 'selector': 'app-lista-tareas'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InicioComponent.html":{"url":"components/InicioComponent.html","title":"component - InicioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InicioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inicio/inicio.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for the application's home page.\nThis component serves as the entry point for the application, providing the main landing page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inicio\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./inicio.component.html\n            \n\n\n\n            \n                styleUrl\n                ./inicio.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component for the application's home page.\n *\n * This component serves as the entry point for the application, providing the main landing page.\n */\n@Component({\n  selector: 'app-inicio',\n  standalone: true,\n  imports: [],\n  templateUrl: './inicio.component.html',\n  styleUrl: './inicio.component.css'\n})\nexport class InicioComponent {\n  \n}\n\n    \n\n    \n        \n  \n\n\n  Integrantes del grupo\n  Kevin Lara\n  Keylor Brenes\n  JeanCarlos Vargas\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Integrantes del grupo  Kevin Lara  Keylor Brenes  JeanCarlos Vargas'\n    var COMPONENTS = [{'name': 'AgregarComponent', 'selector': 'app-agregar'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditarComponent', 'selector': 'app-editar'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'ListaComponent', 'selector': 'app-lista-tareas'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InicioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListaComponent.html":{"url":"components/ListaComponent.html","title":"component - ListaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/listar/listar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying and managing the list of tasks.\nThis component provides functionality to view, edit, and delete tasks.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lista-tareas\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./listar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./listar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tareas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editarTarea\n                            \n                            \n                                eliminarTarea\n                            \n                            \n                                getPriorityClass\n                            \n                            \n                                getTaskProgressClass\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                obtenerTareas\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(taskService: TaskService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/listar/listar.component.ts:24\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the ListaComponent class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to handle task-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nRouter to handle navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editarTarea\n                        \n                    \n                \n            \n            \n                \neditarTarea(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/listar/listar.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Navigates to the edit page for a specific task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to be edited.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eliminarTarea\n                        \n                    \n                \n            \n            \n                \neliminarTarea(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/listar/listar.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Deletes a task after confirming with the user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to be deleted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPriorityClass\n                        \n                    \n                \n            \n            \n                \ngetPriorityClass(priority: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/listar/listar.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Returns the CSS class for task priority based on its level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                priority\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe priority level of the task.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The CSS class for the task priority.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskProgressClass\n                        \n                    \n                \n            \n            \n                \ngetTaskProgressClass(progress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/listar/listar.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Returns the CSS class for task progress based on its status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                progress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe progress status of the task.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The CSS class for the task progress.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/listar/listar.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after Angular has initialized all data-bound properties.\nThis method fetches the list of tasks.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        obtenerTareas\n                        \n                    \n                \n            \n            \n                \nobtenerTareas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/listar/listar.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Fetches the list of tasks from the TaskService.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tareas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/listar/listar.component.ts:24\n                        \n                    \n\n            \n                \n                    List of tasks to be displayed.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { TaskService } from '../services/task.service';\nimport { Task } from '../models/task.model';\nimport Swal from 'sweetalert2';\n\n/**\n * Component for displaying and managing the list of tasks.\n *\n * This component provides functionality to view, edit, and delete tasks.\n */\n@Component({\n  selector: 'app-lista-tareas',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class ListaComponent implements OnInit {\n  /**\n   * List of tasks to be displayed.\n   */\n  tareas: Task[] = [];\n\n  /**\n   * Initializes a new instance of the ListaComponent class.\n   *\n   * @param taskService - Service to handle task-related operations.\n   * @param router - Router to handle navigation.\n   */\n  constructor(private taskService: TaskService, private router: Router) {}\n\n  /**\n   * Lifecycle hook that is called after Angular has initialized all data-bound properties.\n   *\n   * This method fetches the list of tasks.\n   */\n  ngOnInit(): void {\n    this.obtenerTareas();\n  }\n\n  /**\n   * Fetches the list of tasks from the TaskService.\n   */\n  obtenerTareas(): void {\n    this.taskService.getTasks().subscribe({\n      next: response => {\n        console.log('Tasks:', response);\n        this.tareas = response;\n      },\n      error: error => {\n        console.error('Error fetching tasks:', error);\n        alert('An error occurred while fetching tasks.');\n      }\n    });\n  }\n\n  /**\n   * Returns the CSS class for task progress based on its status.\n   *\n   * @param progress - The progress status of the task.\n   * @returns The CSS class for the task progress.\n   */\n  getTaskProgressClass(progress: string): string {\n    switch (progress) {\n      case 'PENDING':\n        return 'badge-pending';\n      case 'IN_PROGRESS':\n        return 'badge-in-progress';\n      case 'COMPLETED':\n        return 'badge-completed';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Returns the CSS class for task priority based on its level.\n   *\n   * @param priority - The priority level of the task.\n   * @returns The CSS class for the task priority.\n   */\n  getPriorityClass(priority: string): string {\n    switch (priority) {\n      case 'LOW':\n        return 'badge-low';\n      case 'MEDIUM':\n        return 'badge-medium';\n      case 'HIGH':\n        return 'badge-high';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Navigates to the edit page for a specific task.\n   *\n   * @param id - The ID of the task to be edited.\n   */\n  editarTarea(id: number): void {\n    console.log('Task to edit:', id);\n    this.router.navigate(['/editar', id]);\n  }\n\n  /**\n   * Deletes a task after confirming with the user.\n   *\n   * @param id - The ID of the task to be deleted.\n   */\n  eliminarTarea(id: number): void {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        console.log(`Attempting to delete task with id: ${id}`);\n        this.taskService.deleteTask(id).subscribe({\n          next: response => {\n            console.log('Task deleted:', response);\n            Swal.fire(\n              'Deleted!',\n              'The task has been deleted.',\n              'success'\n            ).then(() => {\n              this.obtenerTareas(); // Refresh the task list after SweetAlert2 confirmation\n            });\n          },\n          error: error => {\n            console.error('Error deleting task:', error);\n            Swal.fire(\n              'Error',\n              'An error occurred while deleting the task.',\n              'error'\n            );\n          }\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  Tareas\n  \n    \n      \n        Título\n        Descripción\n        Asignado a\n        Fecha de Vencimiento\n        Progreso\n        Prioridad\n        Horas\n        ¿Listo?\n        Acciones\n      \n    \n    \n      \n        {{ tarea.title }}\n        {{ tarea.description }}\n        {{ tarea.user ? tarea.user.userName : 'Sin asignar' }}\n        {{ tarea.dueDate | date }}\n        \n          \n            {{ tarea.progress }}\n          \n        \n        \n          \n            {{ tarea.priority }}\n          \n        \n        {{ tarea.hours }}\n        {{ tarea.isReady ? 'Sí' : 'No' }}\n        \n          \n            Editar\n          \n          \n            Eliminar\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./listar.component.css\n                \n                .badge {\n  padding: 0.5em;\n  border-radius: 0.25em;\n  color: #fff;\n  font-size: 0.9em;\n}\n\n.badge-low {\n  background-color: #28a745; /* Green */\n}\n\n.badge-medium {\n  background-color: #ffc107; /* Yellow */\n}\n\n.badge-high {\n  background-color: #dc3545; /* Red */\n}\n\n.badge-pending {\n  background-color: #6c757d; /* Gray */\n}\n\n.badge-in-progress {\n  background-color: #007bff; /* Blue */\n}\n\n.badge-completed {\n  background-color: #28a745; /* Green */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tareas                    Título        Descripción        Asignado a        Fecha de Vencimiento        Progreso        Prioridad        Horas        ¿Listo?        Acciones                            {{ tarea.title }}        {{ tarea.description }}        {{ tarea.user ? tarea.user.userName : \\'Sin asignar\\' }}        {{ tarea.dueDate | date }}                              {{ tarea.progress }}                                                {{ tarea.priority }}                          {{ tarea.hours }}        {{ tarea.isReady ? \\'Sí\\' : \\'No\\' }}                              Editar                                Eliminar                              '\n    var COMPONENTS = [{'name': 'AgregarComponent', 'selector': 'app-agregar'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'EditarComponent', 'selector': 'app-editar'},{'name': 'InicioComponent', 'selector': 'app-inicio'},{'name': 'ListaComponent', 'selector': 'app-lista-tareas'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a task.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                        \n                                            hours\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isReady\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            photoUrl\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            progress\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A brief description of the task (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The due date for the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hours\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hours:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The estimated number of hours to complete the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The ID of the task (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isReady\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isReady:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the task is ready for review or completion.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photoUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The URL of the photo associated with the task (optional).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The priority level of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current progress of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user assigned to the task (can be null).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  /**\n   * The ID of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  userName: string;\n\n  /**\n   * The email address of the user.\n   */\n  email: string;\n\n  /**\n   * Indicates whether the user is active.\n   */\n  active: boolean;\n}\n\n/**\n * Interface representing a task.\n */\nexport interface Task {\n  /**\n   * The ID of the task (optional).\n   */\n  id?: number;\n\n  /**\n   * The title of the task.\n   */\n  title: string;\n\n  /**\n   * A brief description of the task (optional).\n   */\n  description?: string;\n\n  /**\n   * The due date for the task.\n   */\n  dueDate: Date;\n\n  /**\n   * The current progress of the task.\n   */\n  progress: string;\n\n  /**\n   * The priority level of the task.\n   */\n  priority: string;\n\n  /**\n   * The URL of the photo associated with the task (optional).\n   */\n  photoUrl?: string;\n\n  /**\n   * The estimated number of hours to complete the task.\n   */\n  hours: number;\n\n  /**\n   * Indicates whether the task is ready for review or completion.\n   */\n  isReady: boolean;\n\n  /**\n   * The user assigned to the task (can be null).\n   */\n  user: User | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/task.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling task-related operations.\nThis service provides methods to interact with the task API.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteTask\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasks\n                            \n                            \n                                saveTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/task.service.ts:18\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the TaskService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe HttpClient used to make HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Deletes a task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of the server response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Gets a task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of a Task object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets the list of all tasks.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of an array of Task objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTask\n                        \n                    \n                \n            \n            \n                \nsaveTask(task: Task)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/task.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Saves a new task or updates an existing one.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                task\n                                            \n                                                            Task\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe task object to save.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of the server response.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api/tasks'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/task.service.ts:18\n                        \n                    \n\n            \n                \n                    The base URL for the task API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Task } from '../models/task.model';\n\n/**\n * Service for handling task-related operations.\n *\n * This service provides methods to interact with the task API.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskService {\n    /**\n     * The base URL for the task API.\n     */\n    private baseUrl: string = 'http://localhost:8000/api/tasks';\n\n    /**\n     * Initializes a new instance of the TaskService class.\n     *\n     * @param http - The HttpClient used to make HTTP requests.\n     */\n    constructor(private http: HttpClient) { }\n\n    /**\n     * Gets the list of all tasks.\n     *\n     * @returns An Observable of an array of Task objects.\n     */\n    getTasks(): Observable {\n        return this.http.get(`${this.baseUrl}/list`);\n    }\n\n    /**\n     * Gets a task by its ID.\n     *\n     * @param id - The ID of the task to retrieve.\n     * @returns An Observable of a Task object.\n     */\n    getTaskById(id: number): Observable {\n        return this.http.get(`${this.baseUrl}/getTaskById/${id}`);\n    }\n\n    /**\n     * Saves a new task or updates an existing one.\n     *\n     * @param task - The task object to save.\n     * @returns An Observable of the server response.\n     */\n    saveTask(task: Task): Observable {\n        return this.http.post(`${this.baseUrl}/save`, task);\n    }\n\n    /**\n     * Deletes a task by its ID.\n     *\n     * @param id - The ID of the task to delete.\n     * @returns An Observable of the server response.\n     */\n    deleteTask(id: number): Observable {\n        return this.http.delete(`${this.baseUrl}/delete/${id}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the user is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email address of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  /**\n   * The ID of the user.\n   */\n  id: number;\n\n  /**\n   * The username of the user.\n   */\n  userName: string;\n\n  /**\n   * The email address of the user.\n   */\n  email: string;\n\n  /**\n   * Indicates whether the user is active.\n   */\n  active: boolean;\n}\n\n/**\n * Interface representing a task.\n */\nexport interface Task {\n  /**\n   * The ID of the task (optional).\n   */\n  id?: number;\n\n  /**\n   * The title of the task.\n   */\n  title: string;\n\n  /**\n   * A brief description of the task (optional).\n   */\n  description?: string;\n\n  /**\n   * The due date for the task.\n   */\n  dueDate: Date;\n\n  /**\n   * The current progress of the task.\n   */\n  progress: string;\n\n  /**\n   * The priority level of the task.\n   */\n  priority: string;\n\n  /**\n   * The URL of the photo associated with the task (optional).\n   */\n  photoUrl?: string;\n\n  /**\n   * The estimated number of hours to complete the task.\n   */\n  hours: number;\n\n  /**\n   * Indicates whether the task is ready for review or completion.\n   */\n  isReady: boolean;\n\n  /**\n   * The user assigned to the task (can be null).\n   */\n  user: User | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User-1.html":{"url":"interfaces/User-1.html","title":"interface - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the user is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email address of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of the user.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Interface representing a user.\n */\nexport interface User {\n    /**\n     * The ID of the user.\n     */\n    id: number;\n\n    /**\n     * The username of the user.\n     */\n    userName: string;\n\n    /**\n     * The email address of the user.\n     */\n    email: string;\n\n    /**\n     * Indicates whether the user is active.\n     */\n    active: boolean;\n}\n\n/**\n * Service for handling user-related operations.\n *\n * This service provides methods to interact with the user API.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n    /**\n     * The base URL for the user API.\n     */\n    private baseUrl: string = 'http://localhost:8000/api/users';\n\n    /**\n     * Initializes a new instance of the UserService class.\n     *\n     * @param http - The HttpClient used to make HTTP requests.\n     */\n    constructor(private http: HttpClient) { }\n\n    /**\n     * Gets the list of all users.\n     *\n     * @returns An Observable of an array of User objects.\n     */\n    getUsers(): Observable {\n        return this.http.get(`${this.baseUrl}/list`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling user-related operations.\nThis service provides methods to interact with the user API.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:42\n                            \n                        \n\n                \n                    \n                            Initializes a new instance of the UserService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe HttpClient used to make HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the list of all users.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of an array of User objects.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000/api/users'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:42\n                        \n                    \n\n            \n                \n                    The base URL for the user API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Interface representing a user.\n */\nexport interface User {\n    /**\n     * The ID of the user.\n     */\n    id: number;\n\n    /**\n     * The username of the user.\n     */\n    userName: string;\n\n    /**\n     * The email address of the user.\n     */\n    email: string;\n\n    /**\n     * Indicates whether the user is active.\n     */\n    active: boolean;\n}\n\n/**\n * Service for handling user-related operations.\n *\n * This service provides methods to interact with the user API.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n    /**\n     * The base URL for the user API.\n     */\n    private baseUrl: string = 'http://localhost:8000/api/users';\n\n    /**\n     * Initializes a new instance of the UserService class.\n     *\n     * @param http - The HttpClient used to make HTTP requests.\n     */\n    constructor(private http: HttpClient) { }\n\n    /**\n     * Gets the list of all users.\n     *\n     * @returns An Observable of an array of User objects.\n     */\n    getUsers(): Observable {\n        return this.http.get(`${this.baseUrl}/list`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/agregar/agregar.component.ts\n            \n            component\n            AgregarComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/editar/editar.component.ts\n            \n            component\n            EditarComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/inicio/inicio.component.ts\n            \n            component\n            InicioComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/listar/listar.component.ts\n            \n            component\n            ListaComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/models/task.model.ts\n            \n            interface\n            Task\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/models/task.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/task.service.ts\n            \n            injectable\n            TaskService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            interface\n            User\n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.0.1\n        \n            bootstrap : ^3.4.1\n        \n            jquery : ^3.7.1\n        \n            ngx-sweetalert2 : ^0.2.7\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~7.8.0\n        \n            sweetalert2 : ^11.11.1\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularProyecto\nThis project was generated with Angular CLI version 18.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(),\n    RouterLink\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
